version: '3.8'
services:

    db:
        image: mysql:8.0.23
        restart: always
        environment:
            TZ: America/Sao_Paulo
            MYSQL_ROOT_PASSWORD: docker
            MYSQL_USER: docker
            MYSQL_PASSWORD: docker
            MYSQL_DATABASE: smartcookbook
        ports:
            - "3308:3306"
        networks:
            - smartcookbook-network

    zookeeper:
        image: confluentinc/cp-zookeeper:6.1.1
        container_name: zookeeper
        restart: unless-stopped
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
        healthcheck:
            test: "echo stat | nc localhost $$ZOOKEEPER_CLIENT_PORT"
            start_period: 30s
        networks:
            - smartcookbook-network

    kafka:
        container_name: kafka
        image: confluentinc/cp-kafka:6.1.1
        restart: unless-stopped
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
            - "29092:29092"
        environment:
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_DELETE_TOPIC_ENABLE: "true"
        healthcheck:
            test: [ "CMD", "nc", "-z", "localhost", "9092" ]
            start_period: 30s
        networks:
            - smartcookbook-network

    api-smartcookbook:
        image: augustomarques/smartcookbook
        build: .
        restart: always
        environment:
            SPRING_PROFILES_ACTIVE: docker
            SERVER_PORT: 8080
        ports:
            - "8080:8080"
        links:
            - db
        depends_on:
            - db
        networks:
            - smartcookbook-network

networks:
    smartcookbook-network:
        driver: bridge